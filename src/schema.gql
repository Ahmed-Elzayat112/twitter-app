# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  id: Int!
  content: String!
  created_at: DateTime!
  tweet: Tweet!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Like {
  id: Int!
  tweet: Tweet!
  user: User!
}

type Attachment {
  id: Int!
  type: String!
  size: Float!
  url: String!
  thumbnail: String
  tweet: Tweet!
  user: User!
}

type Tweet {
  id: Int!
  content: String!
  created_at: DateTime!
  user: User!
  comments: [Comment!]
  likes: [Like!]
  attachments: [Attachment!]
}

type Follow {
  id: Int!
  follower: User!
  following: User!
}

type VerificationCode {
  id: Int!
  code: String!
  created_at: DateTime!
  expire_at: DateTime!
  user: User!
}

type Session {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  user: User!
  user_id: Int!
}

type User {
  id: Int!
  username: String!
  email: String!
  verified: Boolean!
  bio: String
  profile_picture: String
  tweets: [Tweet!]
  followers: [Follow!]
  followings: [Follow!]
  verificationCode: VerificationCode
  likes: [Like!]
  comments: [Comment!]
  attachments: [Attachment!]
  sessions: [Session!]!
}

type GqlUserResponse {
  data: User!
  status: String!
  message: String!
}

type GqlUsersResponse {
  data: [User!]!
  status: String!
  message: String!
}

type GqlTweetResponse {
  data: Tweet!
  status: String!
  message: String!
}

type GqlTweetsResponse {
  data: [Tweet!]!
  status: String!
  message: String!
}

type GqlCommentResponse {
  data: Comment!
  status: String!
  message: String!
}

type GqlCommentsResponse {
  data: [Comment!]!
  status: String!
  message: String!
}

type GqlLikeResponse {
  data: Like!
  status: String!
  message: String!
}

type GqlLikesResponse {
  data: [Like!]!
  status: String!
  message: String!
}

type GqlFollowResponse {
  data: Follow!
  status: String!
  message: String!
}

type GqlFollowsResponse {
  data: [Follow!]!
  status: String!
  message: String!
}

type GqlAttachmentResponse {
  data: Attachment!
  status: String!
  message: String!
}

type GqlAttachmentsResponse {
  data: [Attachment!]!
  status: String!
  message: String!
}

type SignUserResponse {
  accessToken: String!
}

type GqlSignUserResponseResponse {
  data: SignUserResponse!
  status: String!
  message: String!
}

type GqlVerificationCodeResponse {
  data: VerificationCode!
  status: String!
  message: String!
}

type GqlVerificationCodesResponse {
  data: [VerificationCode!]!
  status: String!
  message: String!
}

type Query {
  users: GqlUsersResponse!
  user(id: Int!): User!
  tweets: GqlTweetsResponse!
  tweet(id: Int!): GqlTweetResponse!
  comments: GqlCommentsResponse!
  comment(id: Int!): GqlCommentResponse!
  likes: GqlLikesResponse!
  like(id: Int!): GqlLikeResponse!
  follows: GqlFollowsResponse!
  follow(id: Int!): GqlFollowResponse!
  attachments: GqlAttachmentsResponse!
  attachment(id: Int!): GqlAttachmentResponse!
  verificationCodes: GqlVerificationCodesResponse!
  verificationCode(id: Int!): GqlVerificationCodeResponse!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): GqlUserResponse!
  removeUser(id: Int!): User!
  createTweet(createTweetInput: CreateTweetInput!): GqlTweetResponse!
  updateTweet(updateTweetInput: UpdateTweetInput!): GqlTweetResponse!
  removeTweet(id: Int!): GqlTweetResponse!
  createComment(createCommentInput: CreateCommentInput!): GqlCommentResponse!
  updateComment(updateCommentInput: UpdateCommentInput!): GqlCommentResponse!
  removeComment(id: Int!): GqlCommentResponse!
  createLike(createLikeInput: CreateLikeInput!): GqlLikeResponse!
  updateLike(updateLikeInput: UpdateLikeInput!): GqlLikeResponse!
  removeLike(id: Int!): GqlLikeResponse!
  createFollow(createFollowInput: CreateFollowInput!): GqlFollowResponse!
  updateFollow(updateFollowInput: UpdateFollowInput!): GqlFollowResponse!
  removeFollow(id: Int!): GqlFollowResponse!
  createAttachment(createAttachmentInput: CreateAttachmentInput!): GqlAttachmentResponse!
  updateAttachment(updateAttachmentInput: UpdateAttachmentInput!): GqlAttachmentResponse!
  removeAttachment(id: Int!): Attachment!
  uploadFile(file: Upload!): String!
  createVerificationCode(user_id: Float!): GqlVerificationCodeResponse!
  verifyCode(user_id: Float!, code: String!): Boolean!
  updateVerificationCode(updateVerificationCodeInput: UpdateVerificationCodeInput!): GqlVerificationCodeResponse!
  removeVerificationCode(id: Int!): GqlVerificationCodeResponse!
  refreshToken: String!
  logout: Boolean!
  signup(createUserInput: CreateUserInput!): GqlUserResponse!
  login(signUserInput: SignUserInput!): GqlSignUserResponseResponse!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  verified: Boolean! = false
  bio: String
  profile_picture: String
}

input UpdateUserInput {
  username: String
  email: String
  password: String
  verified: Boolean = false
  bio: String
  profile_picture: String
  id: Int!
}

input CreateTweetInput {
  content: String!
  user_id: Float!
}

input UpdateTweetInput {
  content: String
  user_id: Float
  id: Int!
}

input CreateCommentInput {
  content: String!
  created_at: DateTime!
  tweet_id: Float!
  user_id: Float!
}

input UpdateCommentInput {
  content: String
  created_at: DateTime
  tweet_id: Float
  user_id: Float
  id: Int!
}

input CreateLikeInput {
  tweet_id: Int!
  user_id: Int!
}

input UpdateLikeInput {
  tweet_id: Int
  user_id: Int
  id: Int!
}

input CreateFollowInput {
  follower_id: Int!
  following_id: Int!
}

input UpdateFollowInput {
  follower_id: Int
  following_id: Int
  id: Int!
}

input CreateAttachmentInput {
  type: AttachmentType!
  size: Float!
  url: String!
  thumbnail: String!
  tweet_id: Float!
  user_id: Float!
}

"""The types of attachments"""
enum AttachmentType {
  IMAGE
  VIDEO
  DOCUMENT
  OTHER
}

input UpdateAttachmentInput {
  type: AttachmentType
  size: Float
  url: String
  thumbnail: String
  tweet_id: Float
  user_id: Float
  id: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateVerificationCodeInput {
  code: String
  created_at: DateTime
  expire_at: DateTime
  user_id: Float
  id: Int!
}

input SignUserInput {
  email: String!
  password: String!
  bio: String
  profile_picture: String
}